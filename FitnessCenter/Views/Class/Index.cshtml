﻿@using FitnessCenter.Services.Data.Interfaces
@using FitnessCenter.Web.Infrastructure.Extensions
@using FitnessCenter.Web.ViewModels.Class
@using static FitnessCenter.Common.ErrorMessages.Plans
@using static FitnessCenter.Common.EntityValidationConstants.Class

@model IEnumerable<AllClassesIndexViewModel>

@inject IManagerService managerService

@if (TempData[nameof(AddToPlansNotSuccessfullMessage)] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData[nameof(AddToPlansNotSuccessfullMessage)]
    </div>
}

<h2>Classes</h2>

@if (await this.managerService.IsUserManagerAsync(this.User.GetUserId()))
{
    <a asp-action="Manage" class="btn btn-outline-primary mb-4">Mange Classes</a>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Starting Date</th>
            <th>Duration</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (AllClassesIndexViewModel classM in Model)
        {
            if (classM.IsDeleted == false)
            {
                <tr>
                    <td>
                        <div style="text-align: center;">
                            <img src="@classM.ImageUrl" alt="@classM.Title" width="100" style="border: 2px solid gray;" />
                        </div>
                    </td>
                <td>@classM.Title</td>
                <td>@classM.StartingDate</td>
                <td>@classM.Duration minutes</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@classM.Id" class="btn btn-info"><i class="bi bi-info-circle-fill"></i> Details</a>
                    

                    @if (User?.Identity?.IsAuthenticated ?? false)
                    {
                        if (!await this.managerService.IsUserManagerAsync(this.User.GetUserId()))
                        {
                            <form asp-controller="Plan" asp-action="AddToPlans" method="post" class="d-inline">
                            <input type="hidden" name="classId" value="@classM.Id" />
                            <button type="submit" class="btn btn-warning">+Plans</button>
                            </form>
                        }
                    }
                </td>
            </tr>
            }
            
        }
    </tbody>
</table>

@if (User?.Identity?.IsAuthenticated ?? false)
{
    @if (await this.managerService.IsUserManagerAsync(this.User.GetUserId()))
    {
        <div class="pb-3">
            <a asp-action="Create" class="btn btn-primary">Add New Class</a>
            </div>
        
    }
}